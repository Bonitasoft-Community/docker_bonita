handlers = java.util.logging.ConsoleHandler

.handlers = java.util.logging.ConsoleHandler
# The default logging level when not specifically defined
.level= INFO

# The minimum level to log
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Allow logging to trace the actual logger producer class:
java.util.logging.SimpleFormatter.format=%1$tF %1$tT.%1$tL %1$tz %4$s: %3$s %5$s%6$s%n
# Use the following format to remove timestamp:
#java.util.logging.SimpleFormatter.format=%4$s: %3$s %5$s%6$s%n

# By default for development it's a good idea to set the default level for all Bonita component to INFO.
# In production WARNING is a good choice.
org.bonitasoft.level = WARNING

com.arjuna.level = INFO
org.jboss.narayana.tomcat.jta.level = FINE

# At platform initial setup, activate FINE messages on what is happening:
org.bonitasoft.platform.level = INFO

org.bonitasoft.engine.EngineInitializer.level = INFO

# If you want to have more log on connectors execution only, you can activate and modify the following lines
#org.bonitasoft.engine.core.connector.level = FINE
#org.bonitasoft.engine.connector.level = FINE

# If you want to have more log on expressions only, you can activate and modify the following lines
#org.bonitasoft.engine.expression.level = FINE
#org.bonitasoft.engine.data.instance.api.DataExpressionExecutorStrategy.level = FINE

# If you want to have more log on input/output of API calls, you can activate and modify the following line
#org.bonitasoft.engine.api.level = FINEST

# If you want to have more log on Asynchronous executions (Work/Job), you can activate and modify the following lines
#org.bonitasoft.engine.work.level = FINE
#org.bonitasoft.engine.execution.work.level = FINE
#org.bonitasoft.engine.job.level = FINE
#org.bonitasoft.engine.jobs.level = FINE
#org.bonitasoft.engine.scheduler.level = FINE
# Specific logger for auditing work execution
BONITA_WORK_AUDIT.EXECUTION.level = INFO 

# If you want to deactivate warnings on wrong handling of transient data
#org.bonitasoft.engine.operation.TransientDataLeftOperandHandler.level = SEVERE
#org.bonitasoft.engine.expression.ReevaluatingTransientDataExpressionExecutorStrategy.level = SEVERE

# Show stack traces of exceptions when a work fails
org.bonitasoft.engine.execution.work.FailureHandlingBonitaWork.level = FINE

# Hibernate is used by Bonita and very verbose in the log. Should stay with WARNING level except when debugging database access issues
org.hibernate.level = WARNING
# Remove wrong warnings about ehcache:
org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory.level = SEVERE

# Ehcache is used by Bonita and very verbose in the log.  Should stay with WARNING level except when debugging cache issues
net.sf.ehcache.level = WARNING

# Deactivate annoying false warning:
org.hibernate.type.TypeFactory.level = SEVERE

org.springframework.level = WARNING
org.bonitasoft.engine.service.impl.BonitaSpringContext.level = WARNING

# tuckey
org.tuckey.level = WARNING

# If you want to have more log on rest api extension provided logger, you can activate and modify the following lines
#org.bonitasoft.api.extension.level = FINE
